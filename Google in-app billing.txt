Google I/O 2013 - In-App Billing Version 3 summary
This video is about how in-app purchases made by users in Android.  Thousands of developers monetize their apps through try-and-buy, virtual goods, and subscriptions.  This video is about how to handle to leverage the more robust new generation of Android in-app billing API  that makes implementations easier to write and maintain.
Availability - isBillingSupported method call, getPurchases API call, managed items - Google Play inventory is available on all devices.  getSkuDetails() - list of details about an item available on Google Play; be careful with the UI Thread
Purchase Flow - call getBuyIntent API, onActivityResult has the details of the purchase (JSON File that identifies the purchase)
Subscriptions - isBillingSupported API call (Checks to see if subscriptions are allowed), getBuyIntent launches the subscription; subscriptions cannot be consumed.  4 states of subscriptions (trial, active, expired, cancelled).  Local cache (refreshed every 24 hours). Client and server side model (uses a purchase token)
Consumption Models - opposite of a purchase, consumePurchase API, 2 methods of when I should consume an item (1. On actual usage, 2. Consume on purchase and on startup).
Security - be careful of pirates (or crackers).  Ask yourself if the purchase is legitimate?   Think in terms of a risk model.  Your defenses against piracy are developer payload (String attached to an item), signature verification (your app has a public key, Google Play signs purchases, and always check the signature), and server-side validation (check the signature, check the order number, and secure the handshake); be careful of man-in-the-middle attacks.
Sandboxes - create a test account, with limited privileges and no charge to a credit card.  Add test accounts in the publisher's web site.